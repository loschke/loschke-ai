---
import PromptGuideDetailLayout from '../../../components/layouts/PromptGuideDetailLayout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  console.log('Starting getStaticPaths for how-to-prompt-guide');
  
  // Define all the categories and subcategories manually based on the content structure
  const routes = [
    { category: 'einfuehrung', subcategory: 'ki-grundlagen', entryPath: 'einfuehrung/ki-grundlagen' },
    { category: 'einfuehrung', subcategory: 'prompting-grundlagen', entryPath: 'einfuehrung/prompting-grundlagen' },
    { category: 'framework', subcategory: 'prompt-framework', entryPath: 'framework/prompt-framework' },
    { category: 'komponenten', subcategory: 'expertenrolle', entryPath: 'komponenten/expertenrolle' },
    { category: 'komponenten', subcategory: 'aufgabenstellung', entryPath: 'komponenten/aufgabenstellung' },
    { category: 'komponenten', subcategory: 'kontext', entryPath: 'komponenten/kontext' },
    { category: 'komponenten', subcategory: 'ausdruck', entryPath: 'komponenten/ausdruck' },
    { category: 'komponenten', subcategory: 'format', entryPath: 'komponenten/format' },
    { category: 'komponenten', subcategory: 'dialog-followups', entryPath: 'komponenten/dialog-followups' }
  ];
  
  // Convert to the format expected by getStaticPaths
  return routes.map(route => ({
    params: { category: route.category, subcategory: route.subcategory },
    props: { category: route.category, subcategory: route.subcategory, entryPath: route.entryPath }
  }));
}

const { category, subcategory, entryPath } = Astro.props;
---

<PromptGuideDetailLayout 
  category={category}
  subcategory={subcategory}
  entryPath={entryPath}
/>
