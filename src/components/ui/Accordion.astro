---
interface Props {
  title: string;
  initiallyOpen?: boolean;
  class?: string;
}

const { title, initiallyOpen = false, class: className = '' } = Astro.props;
const id = `accordion-${Math.random().toString(36).substring(2, 9)}`;
---

<div class={`accordion-container ${className}`}>
  <button 
    id={`${id}-header`}
    class="accordion-header w-full text-left p-4 bg-gray-800 hover:bg-gray-700 rounded-t-lg flex justify-between items-center"
    aria-expanded={initiallyOpen ? "true" : "false"}
    aria-controls={`${id}-panel`}
  >
    <span class="text-xl font-semibold">{title}</span>
    <span class="accordion-icon">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <polyline points="6 9 12 15 18 9"></polyline>
      </svg>
    </span>
  </button>
  <div 
    id={`${id}-panel`}
    class="accordion-content overflow-hidden transition-all duration-300 ease-in-out"
    aria-labelledby={`${id}-header`}
    style={initiallyOpen ? "" : "display: none;"}
  >
    <div class="p-4 bg-gray-900/50 border border-gray-800 rounded-b-lg">
      <slot />
    </div>
  </div>
</div>

<script>
  // Accordion functionality
  document.addEventListener('astro:page-load', () => {
    document.querySelectorAll('.accordion-header').forEach(header => {
      header.addEventListener('click', () => {
        const controlsId = header.getAttribute('aria-controls');
        if (!controlsId) return;
        
        const panel = document.getElementById(controlsId);
        if (!panel) return;
        
        const isExpanded = header.getAttribute('aria-expanded') === 'true';
        
        header.setAttribute('aria-expanded', isExpanded ? 'false' : 'true');
        
        if (isExpanded) {
          panel.style.display = 'none';
        } else {
          panel.style.display = 'block';
        }
      });
    });
  });
</script>

<style>
  .accordion-header[aria-expanded="true"] .accordion-icon svg {
    transform: rotate(180deg);
  }
  
  .accordion-icon svg {
    transition: transform 0.3s ease;
  }
</style>
